{"id":"buffer.ts","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Rxjx\\package.json","includedInParent":true,"mtime":1662363361583},{"name":"rxjs","loc":{"line":3,"column":21,"index":100},"parent":"C:\\Users\\User\\Desktop\\Rxjx\\Buffering\\buffer.ts","resolved":"C:\\Users\\User\\Desktop\\Rxjx\\node_modules\\rxjs\\dist\\esm5\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar rxjs_1 = require(\"rxjs\"); //#region Buffer Operator\n// Buffers the incoming Observable values until the given closingNotifier Observable emits a value, at which point it emits the buffer on the output Observable and starts a new buffer internally, awaiting the next time closingNotifier emits.\n\n\n(0, rxjs_1.interval)(100).pipe((0, rxjs_1.buffer)((0, rxjs_1.interval)(1000)), (0, rxjs_1.take)(4)).subscribe(function (d) {\n  console.log(d);\n}); //#region  End of Buffer operator"},"sourceMaps":{"js":{"mappings":[{"source":"buffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"buffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"buffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":10}},{"source":"buffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":13}},{"source":"buffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":20}},{"source":"buffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":21}},{"source":"buffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":27}},{"source":"buffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":28}},{"source":"buffer.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":30}},{"source":"buffer.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":0}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":1}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":4}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":10}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":11}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":19}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":9},"generated":{"line":11,"column":21}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":24}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":14},"generated":{"line":11,"column":26}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":30}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":11,"column":31}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":11,"column":32}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":11,"column":35}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":11,"column":41}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":11,"column":42}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":11,"column":48}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":11,"column":50}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":11,"column":51}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":11,"column":54}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":11,"column":60}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":11,"column":61}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":11,"column":69}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":20},"generated":{"line":11,"column":71}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":11,"column":75}},{"source":"buffer.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":11,"column":76}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":77}},{"source":"buffer.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":11,"column":79}},{"source":"buffer.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":11,"column":80}},{"source":"buffer.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":11,"column":83}},{"source":"buffer.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":11,"column":89}},{"source":"buffer.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":11,"column":90}},{"source":"buffer.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":11,"column":94}},{"source":"buffer.ts","name":null,"original":{"line":8,"column":9},"generated":{"line":11,"column":96}},{"source":"buffer.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":11,"column":97}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":98}},{"source":"buffer.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":11,"column":100}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":109}},{"source":"buffer.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":11,"column":110}},{"source":"buffer.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":11,"column":120}},{"source":"buffer.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":11,"column":121}},{"source":"buffer.ts","name":null,"original":{"line":10,"column":13},"generated":{"line":11,"column":123}},{"source":"buffer.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":12,"column":2}},{"source":"buffer.ts","name":null,"original":{"line":11,"column":11},"generated":{"line":12,"column":9}},{"source":"buffer.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":12,"column":10}},{"source":"buffer.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":12,"column":13}},{"source":"buffer.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":12,"column":14}},{"source":"buffer.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":12,"column":15}},{"source":"buffer.ts","name":null,"original":{"line":13,"column":1},"generated":{"line":13,"column":0}},{"source":"buffer.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":13,"column":1}},{"source":"buffer.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":13,"column":4}}],"sources":{"buffer.ts":"import {interval,buffer,take,bufferCount } from 'rxjs'\r\n\r\n\r\n//#region Buffer Operator\r\n// Buffers the incoming Observable values until the given closingNotifier Observable emits a value, at which point it emits the buffer on the output Observable and starts a new buffer internally, awaiting the next time closingNotifier emits.\r\ninterval(100).pipe(\r\n    buffer(interval(1000)),\r\n    take(4)\r\n    \r\n).subscribe(d=>{\r\n    console.log(d);\r\n    \r\n})\r\n\r\n//#region  End of Buffer operator\r\n\r\n\r\n"},"lineCount":null}},"error":null,"hash":"654d07081e97bc2d34ba9bcb2aa42b90","cacheData":{"env":{}}}